name: cd-dev

on:
  push:
    branches: ["main", "dev"]

jobs:
  deploy-to-ec2:
    environment: dev
    
    runs-on: ubuntu-latest
    
    steps:
      - name: github-checkout
        uses: actions/checkout@v3
      
      - name: jdk-setting
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: build-with-gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
        env:
          LOCAL_SERVER_BASE_URL: ${{ secrets.LOCAL_SERVER_BASE_URL }}
      
      - name: docker-emulator-setting
        uses: docker/setup-qemu-action@v2
      
      - name: docker-buildx-setting
        uses: docker/setup-buildx-action@v2
      
      - name: docker-hub-login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: docker-build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ secrets.DOCKER_HUB_TAG }}
          platforms: linux/arm64

      - name: docker-env-file
        run: |
          cd ./deploy/dev
          echo '#!/bin/sh' >> .env
          echo 'DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}' >> .env
          echo 'DOCKER_HUB_REPOSITORY=${{ secrets.DOCKER_HUB_REPOSITORY }}' >> .env
          echo 'DOCKER_HUB_TAG=${{ secrets.DOCKER_HUB_TAG }}' >> .env

      - name: spring-env-file
        run: |
          cd ./deploy/dev
          echo '#!/bin/sh' >> dev.env
          echo 'DEV_DATASOURCE_URL=${{ secrets.DEV_DATASOURCE_URL }}' >> dev.env
          echo 'DEV_DATASOURCE_USERNAME=${{ secrets.DEV_DATASOURCE_USERNAME }}' >> dev.env
          echo 'DEV_DATASOURCE_PASSWORD=${{ secrets.DEV_DATASOURCE_PASSWORD }}' >> dev.env
          echo 'DEV_SERVER_BASE_URL=${{ secrets.DEV_SERVER_BASE_URL }}' >> dev.env
          echo 'DEV_CLIENT_BASE_URL=${{ secrets.DEV_CLIENT_BASE_URL }}' >> dev.env

      - name: copy-to-ec2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_INSTANCE_HOST }}
          port: ${{ secrets.EC2_INSTANCE_PORT }}
          username: ${{ secrets.EC2_INSTANCE_USERNAME }}
          key: ${{ secrets.EC2_INSTANCE_PRIVATE_KEY }}
          source: './deploy/dev/*'
          target: '~/urlShortener/deploy'
          strip_components: 1

      - name: docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_INSTANCE_HOST }}
          port: ${{ secrets.EC2_INSTANCE_PORT }}
          username: ${{ secrets.EC2_INSTANCE_USERNAME }}
          key: ${{ secrets.EC2_INSTANCE_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ secrets.DOCKER_HUB_TAG }}
            cd ~/urlShortener/deploy/dev
            docker-compose -p url-shortener-dev down
            docker-compose -p url-shortener-dev up -d
            docker image prune -f